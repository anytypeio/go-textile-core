syntax = "proto3";
package pb;

message Empty {}

// Response is the response for each request to a Bot
message BotResponse {
    int32 status = 1;
    bytes body = 2;
    string content_type = 3;
}

message APIRequest {
    uint32 bot_store_server = 1; 
    uint32 ipfs_handler_server = 2; 
    bytes data = 3;
}

message Success {
    bool success = 1;
}
message ByteData {
    bytes data = 1;
}


message SetByKey {
    string key = 1;
    bytes data = 2;
}

message ByKey {
    string key = 1;
}

message GetData {
    string path = 1;
    string key = 2;
}

// BotStore is an interface that should be provided by the Cafe to get/set to a storage backend
service BotStore {
	// TODO: stored data []byte might be better as json or json string objects?
	rpc Get(ByKey) returns (ByteData);
	rpc Set(SetByKey) returns (Success);
	rpc Delete(ByKey) returns (Success);
	// TODO: add cleanup/cron method
}

// IpfsHandler is an interface to the gateway method to fetch + decrypt content
service IpfsHandler {
	rpc Get(GetData) returns (ByteData);
	// TODO: Add pin/unpin method
}

// Botservice is the proposed general interface that a Bot should conform to
// This could ultimately live in the cafe or in textile-core
service Botservice {
	rpc Post(APIRequest) returns (BotResponse);
	rpc Get(APIRequest) returns (BotResponse);
	rpc Put(APIRequest) returns (BotResponse);
	rpc Delete(APIRequest) returns (BotResponse);
	// TODO: add cleanup/cron entry
}
