// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bot.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// HostConfig is the config file shared from the Bot to the host on init
type HostConfig struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ReleaseVersion       string            `protobuf:"bytes,3,opt,name=release_version,json=releaseVersion,proto3" json:"release_version,omitempty"`
	ReleaseHash          string            `protobuf:"bytes,4,opt,name=release_hash,json=releaseHash,proto3" json:"release_hash,omitempty"`
	Params               map[string]string `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HostConfig) Reset()         { *m = HostConfig{} }
func (m *HostConfig) String() string { return proto.CompactTextString(m) }
func (*HostConfig) ProtoMessage()    {}
func (*HostConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{1}
}

func (m *HostConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostConfig.Unmarshal(m, b)
}
func (m *HostConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostConfig.Marshal(b, m, deterministic)
}
func (m *HostConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostConfig.Merge(m, src)
}
func (m *HostConfig) XXX_Size() int {
	return xxx_messageInfo_HostConfig.Size(m)
}
func (m *HostConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HostConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HostConfig proto.InternalMessageInfo

func (m *HostConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HostConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HostConfig) GetReleaseVersion() string {
	if m != nil {
		return m.ReleaseVersion
	}
	return ""
}

func (m *HostConfig) GetReleaseHash() string {
	if m != nil {
		return m.ReleaseHash
	}
	return ""
}

func (m *HostConfig) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

// Response is the response for each request to a Bot
type BotResponse struct {
	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Body   []byte `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	// allows bots to set response types dynamically
	ContentType          string   `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BotResponse) Reset()         { *m = BotResponse{} }
func (m *BotResponse) String() string { return proto.CompactTextString(m) }
func (*BotResponse) ProtoMessage()    {}
func (*BotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{2}
}

func (m *BotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BotResponse.Unmarshal(m, b)
}
func (m *BotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BotResponse.Marshal(b, m, deterministic)
}
func (m *BotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotResponse.Merge(m, src)
}
func (m *BotResponse) XXX_Size() int {
	return xxx_messageInfo_BotResponse.Size(m)
}
func (m *BotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BotResponse proto.InternalMessageInfo

func (m *BotResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *BotResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *BotResponse) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

// ClientConfig are the host managed elements shared with the client
type ClientConfig struct {
	BotStoreServer       uint32            `protobuf:"varint,1,opt,name=bot_store_server,json=botStoreServer,proto3" json:"bot_store_server,omitempty"`
	IpfsHandlerServer    uint32            `protobuf:"varint,2,opt,name=ipfs_handler_server,json=ipfsHandlerServer,proto3" json:"ipfs_handler_server,omitempty"`
	Params               map[string]string `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ClientConfig) Reset()         { *m = ClientConfig{} }
func (m *ClientConfig) String() string { return proto.CompactTextString(m) }
func (*ClientConfig) ProtoMessage()    {}
func (*ClientConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{3}
}

func (m *ClientConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientConfig.Unmarshal(m, b)
}
func (m *ClientConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientConfig.Marshal(b, m, deterministic)
}
func (m *ClientConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientConfig.Merge(m, src)
}
func (m *ClientConfig) XXX_Size() int {
	return xxx_messageInfo_ClientConfig.Size(m)
}
func (m *ClientConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ClientConfig proto.InternalMessageInfo

func (m *ClientConfig) GetBotStoreServer() uint32 {
	if m != nil {
		return m.BotStoreServer
	}
	return 0
}

func (m *ClientConfig) GetIpfsHandlerServer() uint32 {
	if m != nil {
		return m.IpfsHandlerServer
	}
	return 0
}

func (m *ClientConfig) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

// APIRequest containing only a data request [GET, DELETE]
type APIRequest struct {
	Data                 []byte        `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Setup                *ClientConfig `protobuf:"bytes,2,opt,name=setup,proto3" json:"setup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *APIRequest) Reset()         { *m = APIRequest{} }
func (m *APIRequest) String() string { return proto.CompactTextString(m) }
func (*APIRequest) ProtoMessage()    {}
func (*APIRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{4}
}

func (m *APIRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIRequest.Unmarshal(m, b)
}
func (m *APIRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIRequest.Marshal(b, m, deterministic)
}
func (m *APIRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIRequest.Merge(m, src)
}
func (m *APIRequest) XXX_Size() int {
	return xxx_messageInfo_APIRequest.Size(m)
}
func (m *APIRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_APIRequest.DiscardUnknown(m)
}

var xxx_messageInfo_APIRequest proto.InternalMessageInfo

func (m *APIRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *APIRequest) GetSetup() *ClientConfig {
	if m != nil {
		return m.Setup
	}
	return nil
}

// APIRequestB containing only a body [POST, PUT]
type APIRequestB struct {
	Data                 []byte        `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Body                 []byte        `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Setup                *ClientConfig `protobuf:"bytes,3,opt,name=setup,proto3" json:"setup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *APIRequestB) Reset()         { *m = APIRequestB{} }
func (m *APIRequestB) String() string { return proto.CompactTextString(m) }
func (*APIRequestB) ProtoMessage()    {}
func (*APIRequestB) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{5}
}

func (m *APIRequestB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIRequestB.Unmarshal(m, b)
}
func (m *APIRequestB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIRequestB.Marshal(b, m, deterministic)
}
func (m *APIRequestB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIRequestB.Merge(m, src)
}
func (m *APIRequestB) XXX_Size() int {
	return xxx_messageInfo_APIRequestB.Size(m)
}
func (m *APIRequestB) XXX_DiscardUnknown() {
	xxx_messageInfo_APIRequestB.DiscardUnknown(m)
}

var xxx_messageInfo_APIRequestB proto.InternalMessageInfo

func (m *APIRequestB) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *APIRequestB) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *APIRequestB) GetSetup() *ClientConfig {
	if m != nil {
		return m.Setup
	}
	return nil
}

type Success struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Success) Reset()         { *m = Success{} }
func (m *Success) String() string { return proto.CompactTextString(m) }
func (*Success) ProtoMessage()    {}
func (*Success) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{6}
}

func (m *Success) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Success.Unmarshal(m, b)
}
func (m *Success) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Success.Marshal(b, m, deterministic)
}
func (m *Success) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Success.Merge(m, src)
}
func (m *Success) XXX_Size() int {
	return xxx_messageInfo_Success.Size(m)
}
func (m *Success) XXX_DiscardUnknown() {
	xxx_messageInfo_Success.DiscardUnknown(m)
}

var xxx_messageInfo_Success proto.InternalMessageInfo

func (m *Success) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ByteData struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByteData) Reset()         { *m = ByteData{} }
func (m *ByteData) String() string { return proto.CompactTextString(m) }
func (*ByteData) ProtoMessage()    {}
func (*ByteData) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{7}
}

func (m *ByteData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByteData.Unmarshal(m, b)
}
func (m *ByteData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByteData.Marshal(b, m, deterministic)
}
func (m *ByteData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByteData.Merge(m, src)
}
func (m *ByteData) XXX_Size() int {
	return xxx_messageInfo_ByteData.Size(m)
}
func (m *ByteData) XXX_DiscardUnknown() {
	xxx_messageInfo_ByteData.DiscardUnknown(m)
}

var xxx_messageInfo_ByteData proto.InternalMessageInfo

func (m *ByteData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// IPFSPin content hash // path and an optional ("" if nil) key for decryption
type IPFSPin struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPFSPin) Reset()         { *m = IPFSPin{} }
func (m *IPFSPin) String() string { return proto.CompactTextString(m) }
func (*IPFSPin) ProtoMessage()    {}
func (*IPFSPin) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{8}
}

func (m *IPFSPin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPFSPin.Unmarshal(m, b)
}
func (m *IPFSPin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPFSPin.Marshal(b, m, deterministic)
}
func (m *IPFSPin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPFSPin.Merge(m, src)
}
func (m *IPFSPin) XXX_Size() int {
	return xxx_messageInfo_IPFSPin.Size(m)
}
func (m *IPFSPin) XXX_DiscardUnknown() {
	xxx_messageInfo_IPFSPin.DiscardUnknown(m)
}

var xxx_messageInfo_IPFSPin proto.InternalMessageInfo

func (m *IPFSPin) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *IPFSPin) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type KeyValResponse struct {
	// The value written at this Key
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// The bot's release version when value was last updated (allowing migrations)
	Version              int32    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValResponse) Reset()         { *m = KeyValResponse{} }
func (m *KeyValResponse) String() string { return proto.CompactTextString(m) }
func (*KeyValResponse) ProtoMessage()    {}
func (*KeyValResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{9}
}

func (m *KeyValResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValResponse.Unmarshal(m, b)
}
func (m *KeyValResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValResponse.Marshal(b, m, deterministic)
}
func (m *KeyValResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValResponse.Merge(m, src)
}
func (m *KeyValResponse) XXX_Size() int {
	return xxx_messageInfo_KeyValResponse.Size(m)
}
func (m *KeyValResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValResponse proto.InternalMessageInfo

func (m *KeyValResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *KeyValResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type SetByKey struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetByKey) Reset()         { *m = SetByKey{} }
func (m *SetByKey) String() string { return proto.CompactTextString(m) }
func (*SetByKey) ProtoMessage()    {}
func (*SetByKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{10}
}

func (m *SetByKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetByKey.Unmarshal(m, b)
}
func (m *SetByKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetByKey.Marshal(b, m, deterministic)
}
func (m *SetByKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetByKey.Merge(m, src)
}
func (m *SetByKey) XXX_Size() int {
	return xxx_messageInfo_SetByKey.Size(m)
}
func (m *SetByKey) XXX_DiscardUnknown() {
	xxx_messageInfo_SetByKey.DiscardUnknown(m)
}

var xxx_messageInfo_SetByKey proto.InternalMessageInfo

func (m *SetByKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetByKey) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ByKey struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByKey) Reset()         { *m = ByKey{} }
func (m *ByKey) String() string { return proto.CompactTextString(m) }
func (*ByKey) ProtoMessage()    {}
func (*ByKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{11}
}

func (m *ByKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByKey.Unmarshal(m, b)
}
func (m *ByKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByKey.Marshal(b, m, deterministic)
}
func (m *ByKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByKey.Merge(m, src)
}
func (m *ByKey) XXX_Size() int {
	return xxx_messageInfo_ByKey.Size(m)
}
func (m *ByKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ByKey.DiscardUnknown(m)
}

var xxx_messageInfo_ByKey proto.InternalMessageInfo

func (m *ByKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetData struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetData) Reset()         { *m = GetData{} }
func (m *GetData) String() string { return proto.CompactTextString(m) }
func (*GetData) ProtoMessage()    {}
func (*GetData) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{12}
}

func (m *GetData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetData.Unmarshal(m, b)
}
func (m *GetData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetData.Marshal(b, m, deterministic)
}
func (m *GetData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetData.Merge(m, src)
}
func (m *GetData) XXX_Size() int {
	return xxx_messageInfo_GetData.Size(m)
}
func (m *GetData) XXX_DiscardUnknown() {
	xxx_messageInfo_GetData.DiscardUnknown(m)
}

var xxx_messageInfo_GetData proto.InternalMessageInfo

func (m *GetData) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GetData) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type AddData struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Encrypt              bool     `protobuf:"varint,2,opt,name=encrypt,proto3" json:"encrypt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddData) Reset()         { *m = AddData{} }
func (m *AddData) String() string { return proto.CompactTextString(m) }
func (*AddData) ProtoMessage()    {}
func (*AddData) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{13}
}

func (m *AddData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddData.Unmarshal(m, b)
}
func (m *AddData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddData.Marshal(b, m, deterministic)
}
func (m *AddData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddData.Merge(m, src)
}
func (m *AddData) XXX_Size() int {
	return xxx_messageInfo_AddData.Size(m)
}
func (m *AddData) XXX_DiscardUnknown() {
	xxx_messageInfo_AddData.DiscardUnknown(m)
}

var xxx_messageInfo_AddData proto.InternalMessageInfo

func (m *AddData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AddData) GetEncrypt() bool {
	if m != nil {
		return m.Encrypt
	}
	return false
}

// ActiveBot is the basic setup information about a running bot
type ActiveBot struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Params               map[string]string `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ActiveBot) Reset()         { *m = ActiveBot{} }
func (m *ActiveBot) String() string { return proto.CompactTextString(m) }
func (*ActiveBot) ProtoMessage()    {}
func (*ActiveBot) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{14}
}

func (m *ActiveBot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveBot.Unmarshal(m, b)
}
func (m *ActiveBot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveBot.Marshal(b, m, deterministic)
}
func (m *ActiveBot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveBot.Merge(m, src)
}
func (m *ActiveBot) XXX_Size() int {
	return xxx_messageInfo_ActiveBot.Size(m)
}
func (m *ActiveBot) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveBot.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveBot proto.InternalMessageInfo

func (m *ActiveBot) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ActiveBot) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ActiveBot) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

// ActiveBotList a list of ActiveBot
type ActiveBotList struct {
	Items                []*ActiveBot `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ActiveBotList) Reset()         { *m = ActiveBotList{} }
func (m *ActiveBotList) String() string { return proto.CompactTextString(m) }
func (*ActiveBotList) ProtoMessage()    {}
func (*ActiveBotList) Descriptor() ([]byte, []int) {
	return fileDescriptor_51d7d70385167023, []int{15}
}

func (m *ActiveBotList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveBotList.Unmarshal(m, b)
}
func (m *ActiveBotList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveBotList.Marshal(b, m, deterministic)
}
func (m *ActiveBotList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveBotList.Merge(m, src)
}
func (m *ActiveBotList) XXX_Size() int {
	return xxx_messageInfo_ActiveBotList.Size(m)
}
func (m *ActiveBotList) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveBotList.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveBotList proto.InternalMessageInfo

func (m *ActiveBotList) GetItems() []*ActiveBot {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterType((*HostConfig)(nil), "pb.HostConfig")
	proto.RegisterMapType((map[string]string)(nil), "pb.HostConfig.ParamsEntry")
	proto.RegisterType((*BotResponse)(nil), "pb.BotResponse")
	proto.RegisterType((*ClientConfig)(nil), "pb.ClientConfig")
	proto.RegisterMapType((map[string]string)(nil), "pb.ClientConfig.ParamsEntry")
	proto.RegisterType((*APIRequest)(nil), "pb.APIRequest")
	proto.RegisterType((*APIRequestB)(nil), "pb.APIRequestB")
	proto.RegisterType((*Success)(nil), "pb.Success")
	proto.RegisterType((*ByteData)(nil), "pb.ByteData")
	proto.RegisterType((*IPFSPin)(nil), "pb.IPFSPin")
	proto.RegisterType((*KeyValResponse)(nil), "pb.KeyValResponse")
	proto.RegisterType((*SetByKey)(nil), "pb.SetByKey")
	proto.RegisterType((*ByKey)(nil), "pb.ByKey")
	proto.RegisterType((*GetData)(nil), "pb.GetData")
	proto.RegisterType((*AddData)(nil), "pb.AddData")
	proto.RegisterType((*ActiveBot)(nil), "pb.ActiveBot")
	proto.RegisterMapType((map[string]string)(nil), "pb.ActiveBot.ParamsEntry")
	proto.RegisterType((*ActiveBotList)(nil), "pb.ActiveBotList")
}

func init() { proto.RegisterFile("bot.proto", fileDescriptor_51d7d70385167023) }

var fileDescriptor_51d7d70385167023 = []byte{
	// 727 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x6e, 0xda, 0x4a,
	0x10, 0x96, 0xed, 0xf0, 0x37, 0x26, 0x24, 0x67, 0xcf, 0xd1, 0x11, 0x41, 0x47, 0xe7, 0x70, 0x9c,
	0x2a, 0xa1, 0x37, 0xb4, 0xa5, 0x91, 0xfa, 0x73, 0x51, 0x09, 0x92, 0x34, 0x44, 0xe9, 0x05, 0x32,
	0x55, 0xae, 0x5a, 0x21, 0x83, 0x27, 0xc5, 0x2a, 0x78, 0x5d, 0xef, 0x80, 0xe4, 0x87, 0xe9, 0x4b,
	0xf4, 0x6d, 0xfa, 0x0c, 0x7d, 0x89, 0x6a, 0xd7, 0x6b, 0x43, 0x28, 0x69, 0x7b, 0x91, 0xbb, 0xd9,
	0x99, 0x6f, 0xbe, 0x19, 0x7f, 0x3b, 0x3b, 0x86, 0xca, 0x98, 0x53, 0x3b, 0x8a, 0x39, 0x71, 0x66,
	0x46, 0x63, 0xa7, 0x04, 0x85, 0xf3, 0x79, 0x44, 0x89, 0xf3, 0xcd, 0x00, 0xe8, 0x73, 0x41, 0xa7,
	0x3c, 0xbc, 0x09, 0x3e, 0x30, 0x06, 0x3b, 0xa1, 0x37, 0xc7, 0xba, 0xd1, 0x34, 0x5a, 0x15, 0x57,
	0xd9, 0xac, 0x06, 0x66, 0xe0, 0xd7, 0x4d, 0xe5, 0x31, 0x03, 0x9f, 0x1d, 0xc3, 0x5e, 0x8c, 0x33,
	0xf4, 0x04, 0x8e, 0x96, 0x18, 0x8b, 0x80, 0x87, 0x75, 0x4b, 0x05, 0x6b, 0xda, 0x7d, 0x9d, 0x7a,
	0xd9, 0xff, 0x50, 0xcd, 0x80, 0x53, 0x4f, 0x4c, 0xeb, 0x3b, 0x0a, 0x65, 0x6b, 0x5f, 0xdf, 0x13,
	0x53, 0xd6, 0x81, 0x62, 0xe4, 0xc5, 0xde, 0x5c, 0xd4, 0x0b, 0x4d, 0xab, 0x65, 0x77, 0x1a, 0xed,
	0x68, 0xdc, 0x5e, 0xf5, 0xd3, 0x1e, 0xa8, 0xe0, 0x79, 0x48, 0x71, 0xe2, 0x6a, 0x64, 0xe3, 0x05,
	0xd8, 0x6b, 0x6e, 0xb6, 0x0f, 0xd6, 0x47, 0x4c, 0x74, 0xc7, 0xd2, 0x64, 0x7f, 0x41, 0x61, 0xe9,
	0xcd, 0x16, 0xa8, 0x7b, 0x4e, 0x0f, 0x2f, 0xcd, 0xe7, 0x86, 0xf3, 0x0e, 0xec, 0x1e, 0x27, 0x17,
	0x45, 0xc4, 0x43, 0x81, 0xec, 0x6f, 0x28, 0x0a, 0xf2, 0x68, 0x21, 0x54, 0x76, 0xc1, 0xd5, 0x27,
	0xa9, 0xc2, 0x98, 0xfb, 0x89, 0xca, 0xaf, 0xba, 0xca, 0x96, 0x1f, 0x33, 0xe1, 0x21, 0x61, 0x48,
	0x23, 0x4a, 0x22, 0xd4, 0x9f, 0x6c, 0x6b, 0xdf, 0xdb, 0x24, 0x42, 0xe7, 0xab, 0x01, 0xd5, 0xd3,
	0x59, 0x80, 0x61, 0xa6, 0x66, 0x0b, 0xf6, 0xc7, 0x9c, 0x46, 0x82, 0x78, 0x8c, 0x23, 0x81, 0xf1,
	0x12, 0x63, 0x55, 0x69, 0xd7, 0xad, 0x8d, 0x39, 0x0d, 0xa5, 0x7b, 0xa8, 0xbc, 0xac, 0x0d, 0x7f,
	0x06, 0xd1, 0x8d, 0x18, 0x4d, 0xbd, 0xd0, 0x9f, 0x61, 0x9c, 0x81, 0x4d, 0x05, 0xfe, 0x43, 0x86,
	0xfa, 0x69, 0x44, 0xe3, 0x4f, 0x72, 0xdd, 0x2c, 0xa5, 0xdb, 0x3f, 0x52, 0xb7, 0xf5, 0xda, 0xf7,
	0xad, 0x5c, 0x1f, 0xa0, 0x3b, 0xb8, 0x74, 0xf1, 0xd3, 0x02, 0x05, 0x49, 0x81, 0x7c, 0x8f, 0x3c,
	0x95, 0x5a, 0x75, 0x95, 0xcd, 0x8e, 0xa0, 0x20, 0x90, 0x16, 0x91, 0xca, 0xb5, 0x3b, 0xfb, 0x9b,
	0x1d, 0xb9, 0x69, 0xd8, 0x79, 0x0f, 0xf6, 0x8a, 0xa9, 0xb7, 0x95, 0x6a, 0x9b, 0xfe, 0x39, 0xbd,
	0xf5, 0x73, 0xfa, 0x43, 0x28, 0x0d, 0x17, 0x93, 0x09, 0x0a, 0xc1, 0xea, 0x50, 0x12, 0xa9, 0xa9,
	0xd8, 0xcb, 0x6e, 0x76, 0x74, 0xfe, 0x85, 0x72, 0x2f, 0x21, 0x3c, 0xd3, 0xc5, 0x36, 0x1b, 0x70,
	0x1e, 0x41, 0xe9, 0x72, 0xf0, 0x7a, 0x38, 0x08, 0x42, 0x19, 0x56, 0xc3, 0xab, 0x5f, 0x84, 0xb4,
	0x33, 0xe1, 0xcc, 0x5c, 0x38, 0xe7, 0x15, 0xd4, 0xae, 0x30, 0xb9, 0xf6, 0x66, 0xf9, 0x6c, 0x6d,
	0xfb, 0xae, 0x3a, 0x94, 0xb2, 0x17, 0x63, 0xaa, 0x81, 0xcb, 0x8e, 0xce, 0x63, 0x28, 0x0f, 0x91,
	0x7a, 0xc9, 0x15, 0x6e, 0xbb, 0x96, 0x8c, 0xcb, 0x5c, 0x6b, 0xf1, 0x00, 0x0a, 0x77, 0xc0, 0x65,
	0xf7, 0x17, 0x48, 0xd9, 0xc7, 0x45, 0x1e, 0xe5, 0xdd, 0x4b, 0x7b, 0x4b, 0xf7, 0xcf, 0xa0, 0xd4,
	0xf5, 0xfd, 0xbb, 0xd4, 0x90, 0x6d, 0x63, 0x38, 0x89, 0x93, 0x88, 0x54, 0x52, 0xd9, 0xcd, 0x8e,
	0xce, 0x67, 0x03, 0x2a, 0xdd, 0x09, 0x05, 0x4b, 0xec, 0x71, 0xd2, 0x8b, 0xc2, 0xc8, 0x17, 0x45,
	0xb6, 0x4c, 0xcc, 0xb5, 0x65, 0xf2, 0x64, 0x63, 0x70, 0x0f, 0xe4, 0x3d, 0xe6, 0x14, 0xf7, 0x3d,
	0xb5, 0x27, 0xb0, 0x9b, 0x73, 0xbf, 0x09, 0x04, 0xb1, 0x43, 0x28, 0x04, 0x84, 0x73, 0x39, 0x10,
	0xb2, 0xfa, 0xee, 0xad, 0xea, 0x6e, 0x1a, 0xeb, 0x10, 0x94, 0x7b, 0xfa, 0x79, 0xb2, 0x07, 0x60,
	0x5d, 0x20, 0xb1, 0x8a, 0x04, 0x2a, 0xbd, 0x1b, 0x4c, 0x9a, 0x1b, 0x97, 0xdd, 0x04, 0x6b, 0x88,
	0xc4, 0xaa, 0x32, 0x94, 0xdd, 0x63, 0xc3, 0x56, 0x27, 0x3d, 0x8b, 0x4d, 0x28, 0x9e, 0xe1, 0x0c,
	0x09, 0xd7, 0xa9, 0xd6, 0x11, 0x9d, 0x01, 0xd8, 0x97, 0xab, 0x77, 0x2e, 0x29, 0x65, 0x61, 0x05,
	0xd1, 0xb7, 0xd9, 0xa8, 0xa6, 0xa9, 0x7a, 0x70, 0xff, 0x03, 0xab, 0xeb, 0xfb, 0x29, 0x42, 0x5f,
	0x5f, 0xca, 0xa8, 0x47, 0xb7, 0xf3, 0xc5, 0x00, 0xe8, 0x71, 0x92, 0xbb, 0x24, 0x98, 0x20, 0x6b,
	0xc1, 0xce, 0x80, 0x0b, 0x62, 0x7b, 0x2a, 0x61, 0xf5, 0x04, 0x1b, 0xca, 0xb1, 0xbe, 0x17, 0x8f,
	0xd2, 0xda, 0xb5, 0xdb, 0xc0, 0x1f, 0x71, 0xc7, 0x60, 0x0d, 0x16, 0xbf, 0x43, 0xf8, 0x30, 0xff,
	0xfa, 0x5f, 0x71, 0x8e, 0x8b, 0xea, 0x27, 0xf5, 0xf4, 0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4e,
	0xe3, 0x65, 0xb7, 0xb1, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BotStoreClient is the client API for BotStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BotStoreClient interface {
	// TODO: stored data []byte might be better as json or json string objects?
	Get(ctx context.Context, in *ByKey, opts ...grpc.CallOption) (*KeyValResponse, error)
	Set(ctx context.Context, in *SetByKey, opts ...grpc.CallOption) (*Success, error)
	Delete(ctx context.Context, in *ByKey, opts ...grpc.CallOption) (*Success, error)
}

type botStoreClient struct {
	cc *grpc.ClientConn
}

func NewBotStoreClient(cc *grpc.ClientConn) BotStoreClient {
	return &botStoreClient{cc}
}

func (c *botStoreClient) Get(ctx context.Context, in *ByKey, opts ...grpc.CallOption) (*KeyValResponse, error) {
	out := new(KeyValResponse)
	err := c.cc.Invoke(ctx, "/pb.BotStore/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botStoreClient) Set(ctx context.Context, in *SetByKey, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/pb.BotStore/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botStoreClient) Delete(ctx context.Context, in *ByKey, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/pb.BotStore/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BotStoreServer is the server API for BotStore service.
type BotStoreServer interface {
	// TODO: stored data []byte might be better as json or json string objects?
	Get(context.Context, *ByKey) (*KeyValResponse, error)
	Set(context.Context, *SetByKey) (*Success, error)
	Delete(context.Context, *ByKey) (*Success, error)
}

// UnimplementedBotStoreServer can be embedded to have forward compatible implementations.
type UnimplementedBotStoreServer struct {
}

func (*UnimplementedBotStoreServer) Get(ctx context.Context, req *ByKey) (*KeyValResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedBotStoreServer) Set(ctx context.Context, req *SetByKey) (*Success, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedBotStoreServer) Delete(ctx context.Context, req *ByKey) (*Success, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterBotStoreServer(s *grpc.Server, srv BotStoreServer) {
	s.RegisterService(&_BotStore_serviceDesc, srv)
}

func _BotStore_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotStoreServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BotStore/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotStoreServer).Get(ctx, req.(*ByKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _BotStore_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetByKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotStoreServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BotStore/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotStoreServer).Set(ctx, req.(*SetByKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _BotStore_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotStoreServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BotStore/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotStoreServer).Delete(ctx, req.(*ByKey))
	}
	return interceptor(ctx, in, info, handler)
}

var _BotStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.BotStore",
	HandlerType: (*BotStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _BotStore_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _BotStore_Set_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _BotStore_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bot.proto",
}

// IpfsHandlerClient is the client API for IpfsHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IpfsHandlerClient interface {
	Get(ctx context.Context, in *GetData, opts ...grpc.CallOption) (*ByteData, error)
	Add(ctx context.Context, in *AddData, opts ...grpc.CallOption) (*IPFSPin, error)
}

type ipfsHandlerClient struct {
	cc *grpc.ClientConn
}

func NewIpfsHandlerClient(cc *grpc.ClientConn) IpfsHandlerClient {
	return &ipfsHandlerClient{cc}
}

func (c *ipfsHandlerClient) Get(ctx context.Context, in *GetData, opts ...grpc.CallOption) (*ByteData, error) {
	out := new(ByteData)
	err := c.cc.Invoke(ctx, "/pb.IpfsHandler/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipfsHandlerClient) Add(ctx context.Context, in *AddData, opts ...grpc.CallOption) (*IPFSPin, error) {
	out := new(IPFSPin)
	err := c.cc.Invoke(ctx, "/pb.IpfsHandler/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IpfsHandlerServer is the server API for IpfsHandler service.
type IpfsHandlerServer interface {
	Get(context.Context, *GetData) (*ByteData, error)
	Add(context.Context, *AddData) (*IPFSPin, error)
}

// UnimplementedIpfsHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedIpfsHandlerServer struct {
}

func (*UnimplementedIpfsHandlerServer) Get(ctx context.Context, req *GetData) (*ByteData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedIpfsHandlerServer) Add(ctx context.Context, req *AddData) (*IPFSPin, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}

func RegisterIpfsHandlerServer(s *grpc.Server, srv IpfsHandlerServer) {
	s.RegisterService(&_IpfsHandler_serviceDesc, srv)
}

func _IpfsHandler_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpfsHandlerServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.IpfsHandler/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpfsHandlerServer).Get(ctx, req.(*GetData))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpfsHandler_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpfsHandlerServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.IpfsHandler/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpfsHandlerServer).Add(ctx, req.(*AddData))
	}
	return interceptor(ctx, in, info, handler)
}

var _IpfsHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.IpfsHandler",
	HandlerType: (*IpfsHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _IpfsHandler_Get_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _IpfsHandler_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bot.proto",
}

// BotserviceClient is the client API for Botservice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BotserviceClient interface {
	Post(ctx context.Context, in *APIRequestB, opts ...grpc.CallOption) (*BotResponse, error)
	Get(ctx context.Context, in *APIRequest, opts ...grpc.CallOption) (*BotResponse, error)
	Put(ctx context.Context, in *APIRequestB, opts ...grpc.CallOption) (*BotResponse, error)
	Delete(ctx context.Context, in *APIRequest, opts ...grpc.CallOption) (*BotResponse, error)
}

type botserviceClient struct {
	cc *grpc.ClientConn
}

func NewBotserviceClient(cc *grpc.ClientConn) BotserviceClient {
	return &botserviceClient{cc}
}

func (c *botserviceClient) Post(ctx context.Context, in *APIRequestB, opts ...grpc.CallOption) (*BotResponse, error) {
	out := new(BotResponse)
	err := c.cc.Invoke(ctx, "/pb.Botservice/Post", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botserviceClient) Get(ctx context.Context, in *APIRequest, opts ...grpc.CallOption) (*BotResponse, error) {
	out := new(BotResponse)
	err := c.cc.Invoke(ctx, "/pb.Botservice/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botserviceClient) Put(ctx context.Context, in *APIRequestB, opts ...grpc.CallOption) (*BotResponse, error) {
	out := new(BotResponse)
	err := c.cc.Invoke(ctx, "/pb.Botservice/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botserviceClient) Delete(ctx context.Context, in *APIRequest, opts ...grpc.CallOption) (*BotResponse, error) {
	out := new(BotResponse)
	err := c.cc.Invoke(ctx, "/pb.Botservice/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BotserviceServer is the server API for Botservice service.
type BotserviceServer interface {
	Post(context.Context, *APIRequestB) (*BotResponse, error)
	Get(context.Context, *APIRequest) (*BotResponse, error)
	Put(context.Context, *APIRequestB) (*BotResponse, error)
	Delete(context.Context, *APIRequest) (*BotResponse, error)
}

// UnimplementedBotserviceServer can be embedded to have forward compatible implementations.
type UnimplementedBotserviceServer struct {
}

func (*UnimplementedBotserviceServer) Post(ctx context.Context, req *APIRequestB) (*BotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Post not implemented")
}
func (*UnimplementedBotserviceServer) Get(ctx context.Context, req *APIRequest) (*BotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedBotserviceServer) Put(ctx context.Context, req *APIRequestB) (*BotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Put not implemented")
}
func (*UnimplementedBotserviceServer) Delete(ctx context.Context, req *APIRequest) (*BotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterBotserviceServer(s *grpc.Server, srv BotserviceServer) {
	s.RegisterService(&_Botservice_serviceDesc, srv)
}

func _Botservice_Post_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIRequestB)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotserviceServer).Post(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Botservice/Post",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotserviceServer).Post(ctx, req.(*APIRequestB))
	}
	return interceptor(ctx, in, info, handler)
}

func _Botservice_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotserviceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Botservice/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotserviceServer).Get(ctx, req.(*APIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Botservice_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIRequestB)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotserviceServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Botservice/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotserviceServer).Put(ctx, req.(*APIRequestB))
	}
	return interceptor(ctx, in, info, handler)
}

func _Botservice_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotserviceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Botservice/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotserviceServer).Delete(ctx, req.(*APIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Botservice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Botservice",
	HandlerType: (*BotserviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Post",
			Handler:    _Botservice_Post_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Botservice_Get_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _Botservice_Put_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Botservice_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bot.proto",
}
